#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4963
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="ItemRegister")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void Insertreported_item(reported_item instance);
    partial void Updatereported_item(reported_item instance);
    partial void Deletereported_item(reported_item instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::DAL.Properties.Settings.Default.ItemRegisterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<reported_item> reported_items
		{
			get
			{
				return this.GetTable<reported_item>();
			}
		}
	}
	
	[Table(Name="dbo.item")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _serial_no;
		
		private int _item_type;
		
		private int _status;
		
		private string _user_key;
		
		private string _title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onserial_noChanging(string value);
    partial void Onserial_noChanged();
    partial void Onitem_typeChanging(int value);
    partial void Onitem_typeChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Onuser_keyChanging(string value);
    partial void Onuser_keyChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public item()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_serial_no", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string serial_no
		{
			get
			{
				return this._serial_no;
			}
			set
			{
				if ((this._serial_no != value))
				{
					this.Onserial_noChanging(value);
					this.SendPropertyChanging();
					this._serial_no = value;
					this.SendPropertyChanged("serial_no");
					this.Onserial_noChanged();
				}
			}
		}
		
		[Column(Storage="_item_type", DbType="Int NOT NULL")]
		public int item_type
		{
			get
			{
				return this._item_type;
			}
			set
			{
				if ((this._item_type != value))
				{
					this.Onitem_typeChanging(value);
					this.SendPropertyChanging();
					this._item_type = value;
					this.SendPropertyChanged("item_type");
					this.Onitem_typeChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_user_key", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string user_key
		{
			get
			{
				return this._user_key;
			}
			set
			{
				if ((this._user_key != value))
				{
					this.Onuser_keyChanging(value);
					this.SendPropertyChanging();
					this._user_key = value;
					this.SendPropertyChanged("user_key");
					this.Onuser_keyChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(150)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.reported_item")]
	public partial class reported_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _serial_no;
		
		private string _user_key;
		
		private System.Nullable<int> _item_type;
		
		private string _latitude;
		
		private string _longitude;
		
		private string _address_line1;
		
		private string _city;
		
		private System.Nullable<int> _postal_code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onserial_noChanging(string value);
    partial void Onserial_noChanged();
    partial void Onuser_keyChanging(string value);
    partial void Onuser_keyChanged();
    partial void Onitem_typeChanging(System.Nullable<int> value);
    partial void Onitem_typeChanged();
    partial void OnlatitudeChanging(string value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(string value);
    partial void OnlongitudeChanged();
    partial void Onaddress_line1Changing(string value);
    partial void Onaddress_line1Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onpostal_codeChanging(System.Nullable<int> value);
    partial void Onpostal_codeChanged();
    #endregion
		
		public reported_item()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_serial_no", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string serial_no
		{
			get
			{
				return this._serial_no;
			}
			set
			{
				if ((this._serial_no != value))
				{
					this.Onserial_noChanging(value);
					this.SendPropertyChanging();
					this._serial_no = value;
					this.SendPropertyChanged("serial_no");
					this.Onserial_noChanged();
				}
			}
		}
		
		[Column(Storage="_user_key", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string user_key
		{
			get
			{
				return this._user_key;
			}
			set
			{
				if ((this._user_key != value))
				{
					this.Onuser_keyChanging(value);
					this.SendPropertyChanging();
					this._user_key = value;
					this.SendPropertyChanged("user_key");
					this.Onuser_keyChanged();
				}
			}
		}
		
		[Column(Storage="_item_type", DbType="Int")]
		public System.Nullable<int> item_type
		{
			get
			{
				return this._item_type;
			}
			set
			{
				if ((this._item_type != value))
				{
					this.Onitem_typeChanging(value);
					this.SendPropertyChanging();
					this._item_type = value;
					this.SendPropertyChanged("item_type");
					this.Onitem_typeChanged();
				}
			}
		}
		
		[Column(Storage="_latitude", DbType="NVarChar(50)")]
		public string latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_longitude", DbType="NVarChar(50)")]
		public string longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_address_line1", DbType="NVarChar(50)")]
		public string address_line1
		{
			get
			{
				return this._address_line1;
			}
			set
			{
				if ((this._address_line1 != value))
				{
					this.Onaddress_line1Changing(value);
					this.SendPropertyChanging();
					this._address_line1 = value;
					this.SendPropertyChanged("address_line1");
					this.Onaddress_line1Changed();
				}
			}
		}
		
		[Column(Storage="_city", DbType="NVarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[Column(Storage="_postal_code", DbType="Int")]
		public System.Nullable<int> postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
